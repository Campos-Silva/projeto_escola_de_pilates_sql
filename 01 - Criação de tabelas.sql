-- Criando o banco de dados

CREATE DATABASE DB_PILATES;

USE DB_PILATES;

-- TB_PRODUTOS
CREATE TABLE TB_PRODUTOS (
    ID_PRODUTO BIGINT AUTO_INCREMENT NOT NULL,
    NOME VARCHAR(100),
    DESCRICAO VARCHAR(100),
    PRECO DECIMAL(10, 2),
    QUANTIDADE_DISPONIVEL BIGINT,
    
    CONSTRAINT PK_ID_PRODUTO PRIMARY KEY(ID_PRODUTO)
);

-- TB_STATUS_DO_PAGAMENTO
CREATE TABLE TB_STATUS_DO_PAGAMENTO (
    ID_STATUS BIGINT AUTO_INCREMENT NOT NULL,
    DESCRICAO VARCHAR(100),
    
    CONSTRAINT PK_ID_STATUS PRIMARY KEY(ID_STATUS)
);

-- TB_FORMAS_DE_PAGAMENTO
CREATE TABLE TB_FORMAS_DE_PAGAMENTO (
    ID_FORMA_PAGAMENTO BIGINT AUTO_INCREMENT NOT NULL,
    TIPO_PAGAMENTO VARCHAR(100),
    
    CONSTRAINT PK_ID_FORMA_PAGAMENTO PRIMARY KEY(ID_FORMA_PAGAMENTO)
);

-- TB_TIPOS_DE_PLANOS
CREATE TABLE TB_TIPOS_DE_PLANOS (
    ID_PLANO BIGINT AUTO_INCREMENT NOT NULL,
    DURACAO_PLANO INT,
    DESCONTO DECIMAL(3, 2),
    FREQUENCIA_SEMANAL BIGINT,
    DESCRICAO_PLANO VARCHAR(100),
    PRECO DECIMAL(10, 2),
    
    CONSTRAINT PK_ID_PLANO PRIMARY KEY(ID_PLANO)
);


-- TB_AULAS
CREATE TABLE TB_AULAS(
	ID_AULA BIGINT AUTO_INCREMENT NOT NULL, 
    NOME_AULA VARCHAR(100) NOT NULL,
    SALA_AULA INT NOT NULL,
    CAPACIDADE_ALUNO INT,

	CONSTRAINT PK_ID_AULA PRIMARY KEY(ID_AULA)
);

-- TB_INSTRUTORES
CREATE TABLE TB_INSTRUTORES(
	ID_INSTRUTOR BIGINT AUTO_INCREMENT NOT NULL, 
    CPF BIGINT,
    NOME VARCHAR(100),
    SOBRENOME VARCHAR(100),
    DATA_NASCIMENTO DATE,
    GENERO ENUM ('F', 'M', 'N'),
    ESPECIALIDADE VARCHAR(100) NOT NULL,
    DATA_CONTRATACAO DATE,
    
    CONSTRAINT PK_ID_INSTRUTOR PRIMARY KEY(ID_INSTRUTOR)
    
);

-- TB_CLIENTES
CREATE TABLE TB_CLIENTES(
	ID_CLIENTE BIGINT AUTO_INCREMENT NOT NULL,
    CPF BIGINT,
    NOME VARCHAR(100) NOT NULL,
    SOBRENOME VARCHAR(100),
    DATA_NASCIMENTO DATE,
    GENERO ENUM ('F', 'M', 'N'),
    DATA_DE_CADASTRO DATE,
    
    CONSTRAINT PK_ID_CLIENTE PRIMARY KEY(ID_CLIENTE));

-- **********************************************************************************************

-- Criando as tabelas que possuem chave estrangeira

-- TB_CONTATO_INSTRUTOR
CREATE TABLE TB_CONTATO_INSTRUTOR (
    ID_CONTATO_INSTRUTOR BIGINT AUTO_INCREMENT NOT NULL,
    ID_INSTRUTOR BIGINT,
    TELEFONE BIGINT NOT NULL,
    EMAIL VARCHAR(100),
    CEP BIGINT,
    RUA VARCHAR(100),
    NUMERO BIGINT,
    BAIRRO VARCHAR(100),
    CIDADE VARCHAR(100),
    ESTADO VARCHAR(2),
    PAIS VARCHAR(100),
    DATA_CADASTRO DATE,
    
    CONSTRAINT PK_ID_CONTATO_INSTRUTOR PRIMARY KEY(ID_CONTATO_INSTRUTOR),
    CONSTRAINT FK_ID_INSTRUTOR FOREIGN KEY(ID_INSTRUTOR) REFERENCES TB_INSTRUTORES(ID_INSTRUTOR) ON DELETE CASCADE 
);

-- TB_CONTATO_CLIENTE
CREATE TABLE TB_CONTATO_CLIENTE (
    ID_CONTATO_CLIENTE BIGINT AUTO_INCREMENT NOT NULL,
    ID_CLIENTE BIGINT,
    TELEFONE BIGINT NOT NULL,
    EMAIL VARCHAR(100),
    CEP BIGINT,
    RUA VARCHAR(100),
    NUMERO BIGINT,
    BAIRRO VARCHAR(100),
    CIDADE VARCHAR(100),
    ESTADO VARCHAR(2),
    PAIS VARCHAR(100),
    DATA_CADASTRO DATE,
    
    CONSTRAINT PK_ID_CONTATO_CLIENTE PRIMARY KEY(ID_CONTATO_CLIENTE),
    CONSTRAINT FK_ID_CLIENTE FOREIGN KEY(ID_CLIENTE) REFERENCES TB_CLIENTES(ID_CLIENTE) ON DELETE CASCADE
);


-- TB_AVALIACAO_FISICA
CREATE TABLE TB_AVALIACAO_FISICA(
	ID_AVALIACAO BIGINT AUTO_INCREMENT NOT NULL, 
    ID_CLIENTE BIGINT,
    ID_INSTRUTOR BIGINT,
    DATA_AVALIACAO DATE NOT NULL,
    PESO DECIMAL(5, 2),
    ALTURA DECIMAL(5, 2),
    PERCENTUAL_MASSA_MAGRA DECIMAL(3,2),
    PERCENTUAL_GORDURA DECIMAL(3,2),
    OBJETIVOS_CLIENTE VARCHAR(100),
    OBSERVACAO VARCHAR(100),
    
        
    CONSTRAINT PK_ID_AVALIACAO PRIMARY KEY(ID_AVALIACAO),
    CONSTRAINT FK_ID_CLIENTE_AVALIACAO FOREIGN KEY(ID_CLIENTE) REFERENCES TB_CLIENTES(ID_CLIENTE) ON DELETE CASCADE,
    CONSTRAINT FK_ID_INSTRUTOR_AVALIACAO FOREIGN KEY(ID_INSTRUTOR) REFERENCES TB_INSTRUTORES(ID_INSTRUTOR) ON DELETE CASCADE 
);

-- TB_CONTRATOS_PLANOS
CREATE TABLE TB_CONTRATOS_PLANOS(
	ID_CONTRATO BIGINT AUTO_INCREMENT NOT NULL, 
    ID_CLIENTE BIGINT,
    ID_PLANO BIGINT,
    DATA_INICIO DATE,
    DATA_TERMINO DATE,
    STATUS_ASSOCIACAO ENUM('ATIVO', 'INATIVO', 'COM PENDENCIAS'),
    
    CONSTRAINT PK_ID_CONTRATO PRIMARY KEY(ID_CONTRATO),
    CONSTRAINT FK_ID_CLIENTE_2 FOREIGN KEY(ID_CLIENTE) REFERENCES TB_CLIENTES(ID_CLIENTE) ON DELETE CASCADE,
    CONSTRAINT FK_ID_PLANO FOREIGN KEY(ID_PLANO) REFERENCES TB_TIPOS_DE_PLANOS(ID_PLANO) ON DELETE CASCADE
    
  );

-- TB_VENDAS
CREATE TABLE TB_VENDAS(
	ID_VENDA  BIGINT AUTO_INCREMENT NOT NULL,
    ID_CLIENTE BIGINT NOT NULL,
    DATA_VENDA DATE,
    VALOR DECIMAL(10,2),
    ID_FORMA_PAGAMENTO BIGINT,
    
    CONSTRAINT PK_VENDAS PRIMARY KEY(ID_VENDA),
    CONSTRAINT FK_CLIENTE_ID FOREIGN KEY (ID_CLIENTE) REFERENCES TB_CLIENTES(ID_CLIENTE) ON DELETE CASCADE,
    CONSTRAINT FK_ID_FORMA_PAGAMENTO FOREIGN KEY (ID_FORMA_PAGAMENTO) REFERENCES TB_FORMAS_DE_PAGAMENTO(ID_FORMA_PAGAMENTO) ON DELETE CASCADE
    
);

-- TB_VENDAS_PRODUTOS
CREATE TABLE TB_VENDAS_PRODUTOS(
	ID  BIGINT AUTO_INCREMENT NOT NULL,
    ID_PRODUTO BIGINT NOT NULL,
    ID_VENDA BIGINT NOT NULL,
    QUANTIDADE BIGINT,
    VALOR_DA_VENDA DECIMAL(10,2),
    
    CONSTRAINT PK_VENDAS_PRODUTOS PRIMARY KEY(ID),
    CONSTRAINT FK_PRODUTO_ID FOREIGN KEY (ID_PRODUTO) REFERENCES TB_PRODUTOS(ID_PRODUTO),
    CONSTRAINT FK_VENDA_ID FOREIGN KEY (ID_VENDA) REFERENCES TB_VENDAS(ID_VENDA)
    
);

-- TB_REGISTRO_INDIVIDUAL_DE_PAGAMENTO_DO_PLANO
CREATE TABLE TB_REGISTRO_INDIVIDUAL_DE_PAGAMENTO_DO_PLANO(
	ID_DO_PAGAMENTO BIGINT AUTO_INCREMENT NOT NULL, 
    ID_CONTRATO_DO_PLANO BIGINT,
    ID_DO_STATUS BIGINT,
    ID_FORMA_DE_PAGAMENTO BIGINT,
    DATA_DO_PAGAMENTO DATE,
    VALOR_PAGO DECIMAL(10,2),
    DATA_VENCIMENTO DATE,
    
	
    CONSTRAINT PK_ID_DO_PAGAMENTO PRIMARY KEY(ID_DO_PAGAMENTO),
    CONSTRAINT FK_ID_CONTRATO_DO_PLANO FOREIGN KEY(ID_CONTRATO_DO_PLANO) REFERENCES TB_CONTRATOS_PLANOS(ID_CONTRATO) ON DELETE CASCADE,
    CONSTRAINT FK_ID_ID_DO_STATUS FOREIGN KEY(ID_DO_STATUS) REFERENCES TB_STATUS_DO_PAGAMENTO(ID_STATUS) ON DELETE CASCADE,
    CONSTRAINT FK_ID_FORMA_DE_PAGAMENTO FOREIGN KEY(ID_FORMA_DE_PAGAMENTO) REFERENCES TB_FORMAS_DE_PAGAMENTO(ID_FORMA_PAGAMENTO) ON DELETE CASCADE
);

-- TB_AGENDA
CREATE TABLE TB_AGENDA(
	ID_AGENDA BIGINT AUTO_INCREMENT NOT NULL, 
    ID_AULA BIGINT,
    DIA_SEMANA INT NOT NULL,
    HORA_INICIO TIME,
    DURACAO INT,

	CONSTRAINT PK_ID_AGENDA PRIMARY KEY(ID_AGENDA),
    CONSTRAINT FK_ID_AULA FOREIGN KEY(ID_AULA) REFERENCES TB_AULAS(ID_AULA) ON DELETE CASCADE
);

-- TB_AGENDAMENTOS
CREATE TABLE TB_AGENDAMENTOS(
	ID_AGENDAMENTO BIGINT AUTO_INCREMENT NOT NULL, 
    ID_CLIENTE BIGINT,
    ID_AGENDA BIGINT,

	CONSTRAINT PK_ID_AGENDAMENTO PRIMARY KEY(ID_AGENDAMENTO),
    CONSTRAINT FK_ID_CLIENTE_3 FOREIGN KEY(ID_CLIENTE) REFERENCES TB_CLIENTES(ID_CLIENTE) ON DELETE CASCADE,
	CONSTRAINT FK_ID_AGENDA FOREIGN KEY(ID_AGENDA) REFERENCES TB_AGENDA(ID_AGENDA) ON DELETE CASCADE  
);

-- TB_AULAS_INSTRUTORES
CREATE TABLE TB_AULAS_INSTRUTORES(
	ID_AULA_INSTRUTOR  BIGINT AUTO_INCREMENT NOT NULL,
    ID_AULA BIGINT NOT NULL,
    ID_INSTRUTOR BIGINT NOT NULL,
    
    CONSTRAINT PK_AULAS_INSTRUTORES PRIMARY KEY(ID_AULA_INSTRUTOR),
    CONSTRAINT FK_AULA_ID FOREIGN KEY (ID_AULA) REFERENCES TB_AULAS(ID_AULA),
    CONSTRAINT FK_INSTRUTOR_ID FOREIGN KEY (ID_INSTRUTOR) REFERENCES TB_INSTRUTORES(ID_INSTRUTOR)
    
);

-- TB_REGISTRO_DE_FREQUENCIA_NAS_AULAS
CREATE TABLE TB_REGISTRO_DE_FREQUENCIA_NAS_AULAS(
	ID_REGISTRO BIGINT AUTO_INCREMENT NOT NULL,
    ID_AGENDAMENTO BIGINT,
    DATA_PARTICIPACAO DATE,


	CONSTRAINT PK_ID_REGISTRO PRIMARY KEY(ID_REGISTRO),
    CONSTRAINT FK_ID_AGENDAMENTO FOREIGN KEY(ID_AGENDAMENTO) REFERENCES TB_AGENDAMENTOS(ID_AGENDAMENTO) ON DELETE CASCADE
);

